Resources:
  HandTermUserPoolFEFBF83D:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_phone_number
            Priority: 1
          - Name: verified_email
            Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: Hello {username}, Thanks for signing up to our app! Your verification code is {####}
      EmailVerificationSubject: Verify your email for our app!
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      Schema:
        - AttributeDataType: String
          Mutable: true
          Name: github_token
        - AttributeDataType: String
          Mutable: true
          Name: github_id
      SmsVerificationMessage: The verification code to your new account is {####}
      UserPoolName: HandTermUserPool
      UsernameAttributes:
        - email
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: Hello {username}, Thanks for signing up to our app! Your verification code is {####}
        EmailSubject: Verify your email for our app!
        SmsMessage: The verification code to your new account is {####}
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermUserPool/Resource
  GitHubIdentityProvider:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      AttributeMapping:
        email: email
        preferredUsername: login
        name: name
        picture: avatar_url
        address: location
        birthdate: created_at
        zoneinfo: tz_offset
        locale: locale
      ProviderDetails:
        client_id: Iv23li7gy43wuuUgck9v
        client_secret: 46c2cd6b690043acca71f113f6383e9cb56b82fc
        attributes_request_method: GET
        oidc_issuer: https://github.com
        authorize_scopes: openid user:email
        authorize_url: https://github.com/login/oauth/authorize
        token_url: https://github.com/login/oauth/access_token
        attributes_url: https://api.github.com/user
        jwks_uri: https://token.actions.githubusercontent.com/.well-known/jwks
      ProviderName: GitHub
      ProviderType: OIDC
      UserPoolId:
        Ref: HandTermUserPoolFEFBF83D
    Metadata:
      aws:cdk:path: HandTermCdkStack/GitHubIdentityProvider
  HandTermApi1BECDD2E:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowCredentials: true
        AllowHeaders:
          - Content-Type
          - Authorization
        AllowMethods:
          - GET
          - POST
          - OPTIONS
        AllowOrigins:
          - http://localhost:5173
          - https://handterm.com
      Description: This service serves authentication requests.
      Name: HandTermService
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/Resource
  HandTermApiDefaultStage974B5E56:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt:
            - ApiGatewayAccessLogsFB871B4C
            - Arn
        Format: '{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","routeKey":"$context.routeKey","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength"}'
      ApiId:
        Ref: HandTermApi1BECDD2E
      AutoDeploy: true
      StageName: $default
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/DefaultStage/Resource
  HandTermApiPOSTsignUpSignUpFunctionintegration69722843:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - SignUpFunctionCFE784C5
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--signUp/SignUpFunction-integration/Resource
  HandTermApiPOSTsignUpSignUpFunctionintegrationPermission9DE2A630:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SignUpFunctionCFE784C5
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/signUp
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--signUp/SignUpFunction-integration-Permission
  HandTermApiPOSTsignUpE96EB1AF:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: NONE
      RouteKey: POST /signUp
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiPOSTsignUpSignUpFunctionintegration69722843
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--signUp/Resource
  HandTermApiPOSTsignInSignInFunctionintegration6C4B2106:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - SignInFunctionC4D5EA9B
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--signIn/SignInFunction-integration/Resource
  HandTermApiPOSTsignInSignInFunctionintegrationPermission0B825EE5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SignInFunctionC4D5EA9B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/signIn
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--signIn/SignInFunction-integration-Permission
  HandTermApiPOSTsignIn44E9BE4E:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: NONE
      RouteKey: POST /signIn
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiPOSTsignInSignInFunctionintegration6C4B2106
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--signIn/Resource
  HandTermApiPOSTrefreshTokenRefreshTokenFunctionintegration6B63FFAE:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - RefreshTokenFunction37E34807
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--refreshToken/RefreshTokenFunction-integration/Resource
  HandTermApiPOSTrefreshTokenRefreshTokenFunctionintegrationPermission5696DDB3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RefreshTokenFunction37E34807
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/refreshToken
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--refreshToken/RefreshTokenFunction-integration-Permission
  HandTermApiPOSTrefreshToken17EFB24F:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: NONE
      RouteKey: POST /refreshToken
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiPOSTrefreshTokenRefreshTokenFunctionintegration6B63FFAE
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--refreshToken/Resource
  HandTermApiPOSTchangePasswordChangePasswordFunctionintegrationE5561A78:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ChangePasswordFunction51DA0296
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--changePassword/ChangePasswordFunction-integration/Resource
  HandTermApiPOSTchangePasswordChangePasswordFunctionintegrationPermissionE080B982:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ChangePasswordFunction51DA0296
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/changePassword
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--changePassword/ChangePasswordFunction-integration-Permission
  HandTermApiPOSTchangePasswordEB282342:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: HandTermApiLambdaAuthorizer3020BBE0
      RouteKey: POST /changePassword
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiPOSTchangePasswordChangePasswordFunctionintegrationE5561A78
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--changePassword/Resource
  HandTermApiLambdaAuthorizer3020BBE0:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizerPayloadFormatVersion: "2.0"
      AuthorizerResultTtlInSeconds: 0
      AuthorizerType: REQUEST
      AuthorizerUri:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":apigateway:"
            - Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
                - AuthorizerFunctionB4DBAA43
                - Arn
            - /invocations
      EnableSimpleResponses: true
      IdentitySource:
        - $request.header.Authorization
      Name: LambdaAuthorizer
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/LambdaAuthorizer/Resource
  HandTermApiHandTermCdkStackHandTermApiLambdaAuthorizer1EB646D6Permission29468AC2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - AuthorizerFunctionB4DBAA43
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /authorizers/
            - Ref: HandTermApiLambdaAuthorizer3020BBE0
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/HandTermCdkStackHandTermApiLambdaAuthorizer1EB646D6-Permission
  HandTermApiGETgetUserGetUserFunctionintegration32BABAF2:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - GetUserFunctionD3D353B4
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--getUser/GetUserFunction-integration/Resource
  HandTermApiGETgetUserGetUserFunctionintegrationPermission29069DF5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetUserFunctionD3D353B4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/getUser
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--getUser/GetUserFunction-integration-Permission
  HandTermApiGETgetUserB5789FFE:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: HandTermApiLambdaAuthorizer3020BBE0
      RouteKey: GET /getUser
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiGETgetUserGetUserFunctionintegration32BABAF2
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--getUser/Resource
  HandTermApiPOSTsetUserSetUserFunctionintegration89C46491:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - SetUserFunction49B5984A
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--setUser/SetUserFunction-integration/Resource
  HandTermApiPOSTsetUserSetUserFunctionintegrationPermissionCE4B1A13:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SetUserFunction49B5984A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/setUser
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--setUser/SetUserFunction-integration-Permission
  HandTermApiPOSTsetUserAC6D6D10:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: HandTermApiLambdaAuthorizer3020BBE0
      RouteKey: POST /setUser
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiPOSTsetUserSetUserFunctionintegration89C46491
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--setUser/Resource
  HandTermApiPOSTsaveLogSaveLogFunctionintegrationEF7781FA:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - SaveLogFunctionFDAB0521
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--saveLog/SaveLogFunction-integration/Resource
  HandTermApiPOSTsaveLogSaveLogFunctionintegrationPermission3923DDC5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SaveLogFunctionFDAB0521
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/saveLog
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--saveLog/SaveLogFunction-integration-Permission
  HandTermApiPOSTsaveLog090348F3:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: HandTermApiLambdaAuthorizer3020BBE0
      RouteKey: POST /saveLog
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiPOSTsaveLogSaveLogFunctionintegrationEF7781FA
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--saveLog/Resource
  HandTermApiPOSTgetLogGetLogFunctionintegrationE40E248F:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - GetLogFunction03FFABB2
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--getLog/GetLogFunction-integration/Resource
  HandTermApiPOSTgetLogGetLogFunctionintegrationPermissionCF046A0F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetLogFunction03FFABB2
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/getLog
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--getLog/GetLogFunction-integration-Permission
  HandTermApiPOSTgetLog8541030C:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: HandTermApiLambdaAuthorizer3020BBE0
      RouteKey: POST /getLog
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiPOSTgetLogGetLogFunctionintegrationE40E248F
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--getLog/Resource
  HandTermApiGETgetLogGetLogFunctionintegrationPermission713BA6C5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetLogFunction03FFABB2
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/getLog
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--getLog/GetLogFunction-integration-Permission
  HandTermApiGETgetLog306C9144:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: HandTermApiLambdaAuthorizer3020BBE0
      RouteKey: GET /getLog
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiPOSTgetLogGetLogFunctionintegrationE40E248F
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--getLog/Resource
  HandTermApiPOSTlistLogListLogFunctionintegration50773924:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ListLogFunction5540628A
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--listLog/ListLogFunction-integration/Resource
  HandTermApiPOSTlistLogListLogFunctionintegrationPermission54951D21:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ListLogFunction5540628A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/listLog
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--listLog/ListLogFunction-integration-Permission
  HandTermApiPOSTlistLogE17D9EBB:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: HandTermApiLambdaAuthorizer3020BBE0
      RouteKey: POST /listLog
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiPOSTlistLogListLogFunctionintegration50773924
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--listLog/Resource
  HandTermApiGETlistLogListLogFunctionintegrationPermission92F5C2FD:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ListLogFunction5540628A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/listLog
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--listLog/ListLogFunction-integration-Permission
  HandTermApiGETlistLogD8261A44:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: HandTermApiLambdaAuthorizer3020BBE0
      RouteKey: GET /listLog
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiPOSTlistLogListLogFunctionintegration50773924
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--listLog/Resource
  HandTermApiGETgetFileGetFileFunctionintegrationB5BED578:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - GetFileFunction303A207D
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--getFile/GetFileFunction-integration/Resource
  HandTermApiGETgetFileGetFileFunctionintegrationPermissionD673CE2D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetFileFunction303A207D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/getFile
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--getFile/GetFileFunction-integration-Permission
  HandTermApiGETgetFile444A3562:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: HandTermApiLambdaAuthorizer3020BBE0
      RouteKey: GET /getFile
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiGETgetFileGetFileFunctionintegrationB5BED578
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--getFile/Resource
  HandTermApiPOSTputFilePutFileFunctionintegration5FE7BE8D:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - PutFileFunction814BBEAD
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--putFile/PutFileFunction-integration/Resource
  HandTermApiPOSTputFilePutFileFunctionintegrationPermission2A52A87A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - PutFileFunction814BBEAD
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/putFile
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--putFile/PutFileFunction-integration-Permission
  HandTermApiPOSTputFileBABA05DE:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: HandTermApiLambdaAuthorizer3020BBE0
      RouteKey: POST /putFile
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiPOSTputFilePutFileFunctionintegration5FE7BE8D
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--putFile/Resource
  HandTermApiGETlistrecentreposListRecentReposFunctionintegration1250D98E:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ListRecentReposFunctionB1A47D20
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--list-recent-repos/ListRecentReposFunction-integration/Resource
  HandTermApiGETlistrecentreposListRecentReposFunctionintegrationPermissionF75E0DEE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ListRecentReposFunctionB1A47D20
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/list-recent-repos
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--list-recent-repos/ListRecentReposFunction-integration-Permission
  HandTermApiGETlistrecentrepos5966C80C:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: HandTermApiLambdaAuthorizer3020BBE0
      RouteKey: GET /list-recent-repos
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiGETlistrecentreposListRecentReposFunctionintegration1250D98E
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--list-recent-repos/Resource
  HandTermApiGETsignoutSignOutFunctionintegration33D87CCE:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - SignOutFunctionAB92EDC3
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--signout/SignOutFunction-integration/Resource
  HandTermApiGETsignoutSignOutFunctionintegrationPermissionFEC3C048:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SignOutFunctionAB92EDC3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/signout
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--signout/SignOutFunction-integration-Permission
  HandTermApiGETsignoutBD9CDE75:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: NONE
      RouteKey: GET /signout
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiGETsignoutSignOutFunctionintegration33D87CCE
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--signout/Resource
  HandTermApiPOSTsignoutSignOutFunctionintegrationPermissionB951F7E7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SignOutFunctionAB92EDC3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/signout
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--signout/SignOutFunction-integration-Permission
  HandTermApiPOSTsignout9E46E73F:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: NONE
      RouteKey: POST /signout
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiGETsignoutSignOutFunctionintegration33D87CCE
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--signout/Resource
  HandTermApiGETgithubauthGitHubAuthRedirectFunctionintegrationCFA177A1:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - GitHubAuthRedirectFunction9618A4D7
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--github_auth/GitHubAuthRedirectFunction-integration/Resource
  HandTermApiGETgithubauthGitHubAuthRedirectFunctionintegrationPermissionE789D21C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GitHubAuthRedirectFunction9618A4D7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/github_auth
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--github_auth/GitHubAuthRedirectFunction-integration-Permission
  HandTermApiGETgithubauth8C7DD1FA:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: NONE
      RouteKey: GET /github_auth
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiGETgithubauthGitHubAuthRedirectFunctionintegrationCFA177A1
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--github_auth/Resource
  HandTermApiGEToauthcallbackOAuthCallbackFunctionintegration2459D455:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - OAuthCallbackFunction09B806B4
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--oauth_callback/OAuthCallbackFunction-integration/Resource
  HandTermApiGEToauthcallbackOAuthCallbackFunctionintegrationPermission975884B9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - OAuthCallbackFunction09B806B4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/oauth_callback
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--oauth_callback/OAuthCallbackFunction-integration-Permission
  HandTermApiGEToauthcallbackCC26BF5E:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: NONE
      RouteKey: GET /oauth_callback
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiGEToauthcallbackOAuthCallbackFunctionintegration2459D455
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/GET--oauth_callback/Resource
  HandTermApiPOSToauthcallbackOAuthCallbackFunctionintegrationPermissionEE15769A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - OAuthCallbackFunction09B806B4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: HandTermApi1BECDD2E
            - /*/*/oauth_callback
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--oauth_callback/OAuthCallbackFunction-integration-Permission
  HandTermApiPOSToauthcallback4C451B67:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HandTermApi1BECDD2E
      AuthorizationType: NONE
      RouteKey: POST /oauth_callback
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: HandTermApiGEToauthcallbackOAuthCallbackFunctionintegration2459D455
    Metadata:
      aws:cdk:path: HandTermCdkStack/HandTermApi/POST--oauth_callback/Resource
  ApiGatewayAccessLogsFB871B4C:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 731
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: HandTermCdkStack/ApiGatewayAccessLogs/Resource
  UserPoolClient2F5918F7:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - profile
        - phone
        - email
        - openid
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - Fn::Join:
            - ""
            - - https://
              - Ref: HandTermApi1BECDD2E
              - .execute-api.
              - Ref: AWS::Region
              - "."
              - Ref: AWS::URLSuffix
              - /oauth_callback
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      LogoutURLs:
        - Fn::Join:
            - ""
            - - https://
              - Ref: HandTermApi1BECDD2E
              - .execute-api.
              - Ref: AWS::Region
              - "."
              - Ref: AWS::URLSuffix
              - /signout
      SupportedIdentityProviders:
        - COGNITO
        - GitHub
      UserPoolId:
        Ref: HandTermUserPoolFEFBF83D
    DependsOn:
      - HandTermUserPoolFEFBF83D
    Metadata:
      aws:cdk:path: HandTermCdkStack/UserPoolClient/Resource
  LambdaExecutionRoleD5C26073:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - cognito-idp:AdminCreateUser
                  - cognito-idp:AdminGetUser
                  - cognito-idp:AdminSetUserPassword
                  - cognito-idp:AdminUpdateUserAttributes
                  - cognito-idp:ListUsers
                Effect: Allow
                Resource:
                  Fn::GetAtt:
                    - HandTermUserPoolFEFBF83D
                    - Arn
            Version: "2012-10-17"
          PolicyName: CognitoAccess
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                Effect: Allow
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - :s3:::handterm
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - :s3:::handterm/*
            Version: "2012-10-17"
          PolicyName: S3Access
    Metadata:
      aws:cdk:path: HandTermCdkStack/LambdaExecutionRole/Resource
  AuthorizerFunctionB4DBAA43:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0.zip
      Environment:
        Variables:
          COGNITO_USER_POOL_ID:
            Ref: HandTermUserPoolFEFBF83D
      Handler: authorizer.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/AuthorizerFunction/Resource
      aws:asset:path: asset.95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0
      aws:asset:is-bundled: false
      aws:asset:property: Code
  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ClientId:
            Ref: UserPoolClient2F5918F7
          ProviderName:
            Fn::GetAtt:
              - HandTermUserPoolFEFBF83D
              - ProviderName
    Metadata:
      aws:cdk:path: HandTermCdkStack/IdentityPool
  SignUpFunctionCFE784C5:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0.zip
      Environment:
        Variables:
          COGNITO_APP_CLIENT_ID:
            Ref: UserPoolClient2F5918F7
      Handler: signUp.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/SignUpFunction/Resource
      aws:asset:path: asset.95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0
      aws:asset:is-bundled: false
      aws:asset:property: Code
  SignInFunctionC4D5EA9B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0.zip
      Environment:
        Variables:
          COGNITO_APP_CLIENT_ID:
            Ref: UserPoolClient2F5918F7
      Handler: signIn.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/SignInFunction/Resource
      aws:asset:path: asset.95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0
      aws:asset:is-bundled: false
      aws:asset:property: Code
  RefreshTokenFunction37E34807:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0.zip
      Environment:
        Variables:
          COGNITO_APP_CLIENT_ID:
            Ref: UserPoolClient2F5918F7
      Handler: refreshToken.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/RefreshTokenFunction/Resource
      aws:asset:path: asset.95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ChangePasswordFunction51DA0296:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0.zip
      Environment:
        Variables:
          COGNITO_APP_CLIENT_ID:
            Ref: UserPoolClient2F5918F7
      Handler: changePassword.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/ChangePasswordFunction/Resource
      aws:asset:path: asset.95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetUserFunctionD3D353B4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 8d4d4dc326e9bf9a3d053c434982d26245f8dc1c5ade13ee2d9288a794077f7f.zip
      Environment:
        Variables:
          COGNITO_APP_CLIENT_ID:
            Ref: UserPoolClient2F5918F7
          BUCKET_NAME: handterm
      Handler: getUser.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/GetUserFunction/Resource
      aws:asset:path: asset.8d4d4dc326e9bf9a3d053c434982d26245f8dc1c5ade13ee2d9288a794077f7f
      aws:asset:is-bundled: false
      aws:asset:property: Code
  SetUserFunction49B5984A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 8d4d4dc326e9bf9a3d053c434982d26245f8dc1c5ade13ee2d9288a794077f7f.zip
      Environment:
        Variables:
          COGNITO_APP_CLIENT_ID:
            Ref: UserPoolClient2F5918F7
      Handler: setUser.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/SetUserFunction/Resource
      aws:asset:path: asset.8d4d4dc326e9bf9a3d053c434982d26245f8dc1c5ade13ee2d9288a794077f7f
      aws:asset:is-bundled: false
      aws:asset:property: Code
  SaveLogFunctionFDAB0521:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 8d4d4dc326e9bf9a3d053c434982d26245f8dc1c5ade13ee2d9288a794077f7f.zip
      Environment:
        Variables:
          COGNITO_APP_CLIENT_ID:
            Ref: UserPoolClient2F5918F7
      Handler: saveLog.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/SaveLogFunction/Resource
      aws:asset:path: asset.8d4d4dc326e9bf9a3d053c434982d26245f8dc1c5ade13ee2d9288a794077f7f
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetLogFunction03FFABB2:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 8d4d4dc326e9bf9a3d053c434982d26245f8dc1c5ade13ee2d9288a794077f7f.zip
      Environment:
        Variables:
          COGNITO_APP_CLIENT_ID:
            Ref: UserPoolClient2F5918F7
      Handler: getLog.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/GetLogFunction/Resource
      aws:asset:path: asset.8d4d4dc326e9bf9a3d053c434982d26245f8dc1c5ade13ee2d9288a794077f7f
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ListLogFunction5540628A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 8d4d4dc326e9bf9a3d053c434982d26245f8dc1c5ade13ee2d9288a794077f7f.zip
      Environment:
        Variables:
          COGNITO_APP_CLIENT_ID:
            Ref: UserPoolClient2F5918F7
      Handler: listLog.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/ListLogFunction/Resource
      aws:asset:path: asset.8d4d4dc326e9bf9a3d053c434982d26245f8dc1c5ade13ee2d9288a794077f7f
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetFileFunction303A207D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 8d4d4dc326e9bf9a3d053c434982d26245f8dc1c5ade13ee2d9288a794077f7f.zip
      Environment:
        Variables:
          COGNITO_APP_CLIENT_ID:
            Ref: UserPoolClient2F5918F7
      Handler: getFile.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/GetFileFunction/Resource
      aws:asset:path: asset.8d4d4dc326e9bf9a3d053c434982d26245f8dc1c5ade13ee2d9288a794077f7f
      aws:asset:is-bundled: false
      aws:asset:property: Code
  PutFileFunction814BBEAD:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 8d4d4dc326e9bf9a3d053c434982d26245f8dc1c5ade13ee2d9288a794077f7f.zip
      Environment:
        Variables:
          COGNITO_APP_CLIENT_ID:
            Ref: UserPoolClient2F5918F7
      Handler: putFile.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/PutFileFunction/Resource
      aws:asset:path: asset.8d4d4dc326e9bf9a3d053c434982d26245f8dc1c5ade13ee2d9288a794077f7f
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ListRecentReposFunctionB1A47D20:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0.zip
      Environment:
        Variables:
          COGNITO_USER_POOL_ID:
            Ref: HandTermUserPoolFEFBF83D
      Handler: listRecentRepos.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/ListRecentReposFunction/Resource
      aws:asset:path: asset.95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0
      aws:asset:is-bundled: false
      aws:asset:property: Code
  SignOutFunctionAB92EDC3:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0.zip
      Handler: signOut.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/SignOutFunction/Resource
      aws:asset:path: asset.95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GitHubAuthRedirectFunction9618A4D7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0.zip
      Environment:
        Variables:
          GITHUB_CLIENT_ID: Iv23li7gy43wuuUgck9v
          REDIRECT_URI:
            Fn::Join:
              - ""
              - - https://
                - Ref: HandTermApi1BECDD2E
                - .execute-api.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /oauth_callback
      Handler: githubAuthRedirect.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/GitHubAuthRedirectFunction/Resource
      aws:asset:path: asset.95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0
      aws:asset:is-bundled: false
      aws:asset:property: Code
  OAuthCallbackFunction09B806B4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0.zip
      Environment:
        Variables:
          GITHUB_CLIENT_ID: Iv23li7gy43wuuUgck9v
          GITHUB_CLIENT_SECRET: 46c2cd6b690043acca71f113f6383e9cb56b82fc
          COGNITO_USER_POOL_ID:
            Ref: HandTermUserPoolFEFBF83D
          FRONTEND_URL: https://handterm.com
      Handler: oauth_callback.handler
      Role:
        Fn::GetAtt:
          - LambdaExecutionRoleD5C26073
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - LambdaExecutionRoleD5C26073
    Metadata:
      aws:cdk:path: HandTermCdkStack/OAuthCallbackFunction/Resource
      aws:asset:path: asset.95b6b6c74fa70d9ebdbd2e018f22ed10163e368a40b1c68cdad16e22fc8bb5c0
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/21QTWvDMAz9Lbu73poNdm4D2wqDlZSdi5uonlrHCpbc0pn89+GEtBvs9D709JBd6PnTsy7uzJlndXOcOdzptBFTH5U58zbVZD0K6fTJENZETpV7/x9fNeAF5bIOdMIGgpoGpUPw8jt6c65LRK5XpkNrBM7mcip0ehPpFh3mWIYsN2IsZGMk2aooyshWXsAGI0h+qP4rb7lFlC8K+A1hqL6qXjnT7hqjU7n3awgtMufll+jrqWXivXJkWad3sq+BYpdnE+8VP+plrI8gS8Og0LQ6VeRgPMNBDmwNMwjrRYZeVcAUQw1q0Pl16G3Of0Tp4vBV10i59yX5Bsc7PDWgD3x/Kh70vNDzuwMjzkL0gi3oasQfdbk43uUBAAA=
    Metadata:
      aws:cdk:path: HandTermCdkStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  GetUserEndpoint:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: HandTermApi1BECDD2E
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - //getUser
  ApiEndpoint:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: HandTermApi1BECDD2E
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
  UserPoolId:
    Value:
      Ref: HandTermUserPoolFEFBF83D
  UserPoolClientId:
    Value:
      Ref: UserPoolClient2F5918F7
  IdentityPoolId:
    Value:
      Ref: IdentityPool
  BucketName:
    Value: handterm
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]

